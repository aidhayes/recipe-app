{"ast":null,"code":"import _slicedToArray from \"/Users/aidan/recipe-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport PropTypes from 'prop-types';\nimport { DEFAULT_BREAKPOINTS, DEFAULT_MIN_BREAKPOINT } from './ThemeProvider';\nexport function responsivePropType(propType) {\n  return PropTypes.oneOfType([propType, PropTypes.shape({\n    xs: propType,\n    sm: propType,\n    md: propType,\n    lg: propType,\n    xl: propType,\n    xxl: propType\n  })]);\n}\nexport default function createUtilityClassName(utilityValues) {\n  var breakpoints = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_BREAKPOINTS;\n  var minBreakpoint = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_MIN_BREAKPOINT;\n  var classes = [];\n  Object.entries(utilityValues).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        utilName = _ref2[0],\n        utilValue = _ref2[1];\n\n    if (utilValue != null) {\n      if (typeof utilValue === 'object') {\n        breakpoints.forEach(function (brkPoint) {\n          var bpValue = utilValue[brkPoint];\n\n          if (bpValue != null) {\n            var infix = brkPoint !== minBreakpoint ? \"-\".concat(brkPoint) : '';\n            classes.push(\"\".concat(utilName).concat(infix, \"-\").concat(bpValue));\n          }\n        });\n      } else {\n        classes.push(\"\".concat(utilName, \"-\").concat(utilValue));\n      }\n    }\n  });\n  return classes;\n}","map":null,"metadata":{},"sourceType":"module"}